networkmanager auto re-enable device if missing firmware appears.
bombyx doesn't do this.
udev should re-enable the network device if firmware directory changed.
bombyx should monitor the device and take action, not monitor the firmware directory.

what should networkmanager do if firmware file content changes?
bombyx don't care about it, it's the responsibility of udev.






the following network interface should not be managed by bombyx:

# Do not modify this file, it will get overwritten on updates.
# To override or extend the rules place a file in /etc/udev/rules.d

SUBSYSTEM!="net", GOTO="nm_unmanaged_end"
ACTION!="add|change", GOTO="nm_unmanaged_end"

# VirtualBox host networking. Out-of-tree driver that looks like an ordinary
# Ethernet. No parent device (lives in /virtual/), no support for ethtool
# to identify the driver, MAC address defaults to 08:00:27:, but can be
# changed. Interface name will have to do, it's always vboxnet*.
ENV{INTERFACE}=="vboxnet[0-9]*", ENV{NM_UNMANAGED}="1"

# VMWare host networking. Out-of-tree driver that looks like an ordinary
# Ethernet. No parent device (lives in /virtual/), no support for
# ethtool to identify the driver. They have their own MAC prefix that
# can not be changed.
ATTR{address}=="00:50:56:*", ENV{INTERFACE}=="vmnet[0-9]*", ENV{NM_UNMANAGED}="1"

# Parallels Workstation host networking. Out-of-tree driver that looks like
# an ordinary Ethernet. No parent device (lives in /virtual/),  no support for
# ethtool to identify the driver and the interface name is too generic.
# However, they have their own MAC prefix that can not be changed.
ATTR{address}=="00:1c:42:*", ENV{INTERFACE}=="vnic[0-9]*", ENV{NM_UNMANAGED}="1"

# Virtual Ethernet device pair. Often used to communicate with a peer interface
# in another net namespace and managed by libvirt, Docker or the like.
ENV{ID_NET_DRIVER}=="veth", ENV{NM_UNMANAGED}="1"

# USB gadget device. Unmanage by default, since whatever created it
# might want to set it up itself (e.g. activate an ipv4.method=shared
# connection).
ENV{DEVTYPE}=="gadget", ENV{NM_UNMANAGED}="1"

LABEL="nm_unmanaged_end"






NetworkManager can detect hostname change.
bombyx can't do this.
It may be a disadvantage, but I think it is the final decision, because:
1. there're many program can't do this, like bash which shows hostname in the commmand prompt
2. it is too complicated to do it generally, for example we need to have daemon systemd-hostnamed.

should Bombyx get hostname from network(for example via DHCP)?
should Bombyx support systemd's transient hostname?
should Bombyx looks for hostname by reverse DNS?
I don't think so.
1. I can't find a normal scene this is useful.
2. changing the hostname at runtime may confuse the graphical desktop or other applications.
3. The whole hostname via DHCP seems like an option one would setup for extremely non-permanent devices
   that one would not want to routinely access or check on remotely in any way. Just assign a hostname 
   to make it easier to parse through DHCP than just looking at a pile of numbers. If anyone has any 
   better ideas as to why DHCP hostnames would/should be preferable, please comment to explain the 
   benefits; I canâ€™t see the immediate benefit of something like that.
4. "systemd's transient hostname" is bad, "systemd's pretty hostname" looks good.





should Bombyx hide connection from some of the users?
should Bombyx do permission management for connections?
No.
Networkmanager do this because user can create connection, so the creator may want to hide/disable it from others.
All the connections in Bombyx can be viewed as created by root, like packages.
So they should be visible to all users.
If you really need to do this, you should do it in filesystem level. how do you hide files from users? how do you restrict file access?
Bombyx's architecture should let this happen.




should NetworkManager support libaudit?
Yes.
I have delete the core code, but all the audit point is commented so we can add it back in future.
it is good for both enterprise and personal usage.



